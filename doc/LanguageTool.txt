*LanguageTool.txt*  A grammar checker in Vim for English, French, German, etc. *LanguageTool*

Author:      Dominique Pell√© <dominique.pelle@gmail.com>
Last Change: 2019 Sep 03

For Vim version 8.0 and above

============================================================================

1.  Overview                                      |languagetool-overview|
2.  Screenshots & Demo                            |languagetool-screenshots|
3.  Download                                      |languagetool-download|
4.  Installation                                  |languagetool-installation|
5.  Configuration                                 |languagetool-configuration|
6.  Features                                      |languagetool-features|
7.  Bugs                                          |languagetool-bugs|
8.  License                                       |languagetool-license|

============================================================================

1. Overview                                           *languagetool-overview*

This plugin integrates LanguageTool into Vim. LanguageTool is an Open Source
style and grammar checker for English, French, German, etc. See
http://www.languagetool.org/languages/ for a complete list of supported
languages.

LanguageTool detects grammar mistakes that a spelling checker cannot detect
such as "it work" instead of "it works". Since version 1.8, LanguageTool
can also detect spelling mistakes using Hunspell dictionaries bundled with
LanguageTool for several languages or using morfologik for other languages.
Vim builtin spelling checker can also of course be used along with
LanguageTool. One advantage of the spelling checker of LanguageTool over
Vim spelling checker, is that it uses the native Hunspell dictionary directly,
so it works even with the latest Hunspell dictionaries containing features
not supported by Vim. For example, the latest French Hunspell dictionaries
from http://www.dicollecte.org are not supported by Vim but they work well
with LanguageTool. On the other hand, the Vim native spelling checker is
faster and better integrated with Vim.

See http://www.languagetool.org/ for more information about LanguageTool.

This plugin requieres `curl` to work.

============================================================================

2. Screenshots                                     *languagetool-screenshots*

If you don't have time to read help files, these screenshots will give you
an idea of what the LanguageTool plugin does:

  http://dominique.pelle.free.fr/pic/LanguageToolVimPlugin_en.png
  http://dominique.pelle.free.fr/pic/LanguageToolVimPlugin_fr.png

============================================================================

3. Download                                           *languagetool-download*

You can download the latest version of this plugin from:

  http://www.vim.org/scripts/script.php?script_id=3223

LanguageTool can be downloaded from:

  http://www.languagetool.org/

============================================================================

4. Installation                                   *languagetool-installation*

4.1 Installing the plugin~

Unzip file LanguageTool.zip plugin from in your personal |vimfiles| directory
(~/.vim under Unix or %HOMEPATH%\vimfiles under Windows): >

  $ mkdir ~/.vim
  $ cd ~/.vim
  $ unzip /path-to/LanguageTool.zip
  $ vim -c 'helptags ~/.vim/doc'

The zip file contains the following files: >

  plugin/LanguageTool.vim
  doc/LanguageTool.vim

You have to enable plugins by adding these two lines in your |.vimrc| file: >

  set nocompatible
  filetype plugin on

Alternatively, if you prefer to use Vundle or Pathogen plugin managers,
the plugin is available on github at:

  https://github.com/dpelle/vim-LanguageTool

For example, using Vundle, you can install the plugin by adding
this line in you ~/.vimrc: >

  Plugin 'dpelle/vim-LanguageTool'

4.2 Installing LanguageTool~

To use this plugin, you need to install the Java LanguageTool program. You
can choose to:

* download stand-alone version of LanguageTool (LanguageTool-*.zip) from:
  http://www.languagetool.org/ using the orange button labeled
  "Download LanguageTool for stand-alone use". The standalone version of
  Vim not only does grammar checking but also contains Hunspell dictionaries
  for spell checking.
* or download a nightly build LanguageTool-.*-snapshot.zip from
  http://www.languagetool.org/download/snapshots/. It contains a more
  recent version than the stable version but it is not as well tested.
* or checkout and build the latest LanguageTool from sources in git.

Recent versions of LanguageTool require Java-8.

4.2.1 Download the stand-alone version of LanguageTool~

Download the stand-alone version of LanguageTool (LanguageTool-*.zip)
from http://www.languagetool.org/, click on "LanguageTool stand-alone
for your desktop" to download it. Unzip it: >

  $ unzip LanguageTool-3.6.zip

This should extract the file LanguageTool-3.6/languagetool-commandline.jar
among several other files.

4.2.2 Build LanguageTool from sources in git~

If you prefer to build LanguageTool yourself from sources, you first need
to install the pre-requisite packages. On Ubuntu, you need to install the
following packages: >

  $ sudo apt-get install openjdk-8-jdk maven git

LanguageTool can then be downloaded and built with Maven as follows: >

  $ git clone https://github.com/languagetool-org/languagetool.git
  $ cd languagetool
  $ mvn clean package

After the build, the command line version of LanguageTool can be found in: >

  ./languagetool-standalone/target/LanguageTool-4.3-SNAPSHOT/LanguageTool-4.3-SNAPSHOT/languagetool-server.jar

4.3 Configuring the location of the jar file~

After installing LanguageTool, you must specify the location of the file
languagetool-server.jar in your $HOME/.vimrc file. Example: >

  let g:languagetool_server='$HOME/languagetool/languagetool-standalone/target/LanguageTool-4.3-SNAPSHOT/LanguageTool-4.3-SNAPSHOT/languagetool-server.jar'

See section |languagetool-configuration| for more optional settings.

============================================================================

5. Configuration                                 *languagetool-configuration*

LanguageTool plugin uses character encoding from the 'fenc' option or from
the 'enc' option if 'fenc' is empty.

Several global variables can be set in your |vimrc| to configure the behavior
of the LanguageTool plugin.

g:languagetool_server                                 *g:languagetool_server*

  This variable specifies the location of the LanguageTool java grammar
  checker server. Default is `$HOME/languagetool/languagetool-server.jar`.

  Example: >

  :let g:languagetool_server='$HOME/languagetool/languagetool-standalone/target/LanguageTool-4.3-SNAPSHOT/LanguageTool-4.3-SNAPSHOT/languagetool-server.jar'

g:languagetool_port

  This variable specifies the port that will be used by the server.
  Default value is `8081`.

g:languagetool_lang                                     *g:languagetool_lang*

  The language code to use for the language tool checker. If undefined,
  plugin tries to guess the language of the Vim spelling checker
  'spelllang' or v:lang. If neither works, plugin defaults to
  English US (en-US). Starting with LanguageTool-1.8, regional variants
  of some languages can be specified. For languages with variants
  (currently English German and Portuguese), it is necessary to specify the
  variant in order for LanguageTool to signal spelling errors. In other
  words, with  :set spelllang=en  LanguageTool only signals grammar
  mistakes whereas with  :set spelllang=en_us LanguageTool signals
  spelling mistakes and grammar mistakes.
  Valid language codes are provided by `:LanguageToolSupportedLanguages`

g:languagetool_disable_rules                   *g:languagetool_disable_rules*

  This variable specifies checker rules which are disabled. Each disabled
  rule must be comma separated.
  Default value set by plugin is: WHITESPACE_RULE,EN_QUOTES

g:languagetool_enable_rules                     *g:languagetool_enable_rules*

  This variable specifies checker rules which are enabled.

g:languagetool_disable_categories         *g:languagetool_disable_categories*

  This variable specifies checker rule-categories which are disabled.

g:languagetool_enable_categories           *g:languagetool_enable_categories*

  This variable specifies checker rule-categories which are enabled.

You can also customize the following syntax highlighting groups: >

  LanguageToolCmd
  LanguageToolErrorCount
  LanguageToolLabel
  LanguageToolUrl
  LanguageToolGrammarError
  LanguageToolSpellingError

For example, to highlight grammar errors in blue, and spelling errors in
red, with a curly underline in vim GUIs that support it, add this into your
colorscheme:

```
hi LanguageToolGrammarError  guisp=blue gui=undercurl guifg=NONE guibg=NONE ctermfg=white ctermbg=blue term=underline cterm=none
hi LanguageToolSpellingError guisp=red  gui=undercurl guifg=NONE guibg=NONE ctermfg=white ctermbg=red  term=underline cterm=none
```

============================================================================

6. Features                                           *languagetool-features*

The LanguageTool plugin defines 4 commands : 
    |:LanguageToolCheck|
    |:LanguageToolClean|
    |:LanguageToolSetUp|
    |:LanguageToolErrorAtPoint|
    |:LanguageToolSupportedLanguages|
    |:LanguageToolFixAtPoint|

:LanguageToolSetUp                                       *:LanguageToolSetUp*

Use this command to run LanguageTool server. It is required to run this
command before running |:LanguageToolCheck|.

:LanguageToolCheck                                       *:LanguageToolCheck*

Use the |:LanguageToolCheck| command to check the grammar in the current
buffer. This will highlight errors in the buffer and populate the
location-list for the window.
Befor running this command you need to run |:LanguageToolSetUp|

:LanguageToolClear                                       *:LanguageToolClear*

Use the |:LanguageToolClear| command to clear highlighting of grammar
mistakes, close the scratch window containing the list of errors, clear
and close the location-list.

The two commands are also available from the menu in gvim: >

  Plugin -> LanguageTool -> Check
                         -> Clear

:LanguageToolErrorAtPoint

This command opens more informations on the error at point in the preview
window.
When in the preview window, you can fix the error by putting the cursor on a
given correction and hitting <CR>.

:LanguageToolSupportedLanguages            *:LanguageToolSupportedLanguages*

Use this command to know which languages are supported by the server you have.

:[count]LanguageToolFixAtPoint                    *:LanguageToolFixAtPoint*

This command uses [count]th suggestion to fix error at point (starting at
index 0).
Without [count] the command is the same as `:0LanguageToolFixAtPoint`.

Using the Location-list~

The |location-list| is populated when running |:LanguageToolCheck|. So you can
use location-list Vim commands such as |:lopen| to open the location-list
window, |:lne| to jump to the next error, etc.

============================================================================

7. Bugs                                                   *languagetool-bugs*

Please report bugs or suggestions to <dominique.pelle@gmail.com>.
Alternatively, you can also discuss improvements to this plugin in Wiki
by clicking on the "Vim wiki" link at the top of the script page:

  http://www.vim.org/scripts/script.php?script_id=3223

============================================================================

8. Other plugin for grammar checking

Grammalecte is another grammar checker for French.  A plugin for Vim is
available at:

  https://github.com/dpelle/vim-Grammalecte

Checking text with Grammalecte or LanguageTool can find different errors,
Installing both plugins is thus recommended.

============================================================================

9. License                                             *languagetool-license*

The VIM LICENSE applies to the LanguageTool.vim plugin (see |copyright|
except use "LanguageTool.vim" instead of "Vim").

LanguageTool is freely available under LGPL.

============================================================================
vim:tw=78:fo=tcq2:isk=!-~,^*,^\|,^\":ts=8:ft=help:norl:
